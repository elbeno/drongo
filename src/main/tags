CURRINST	run.c	/^#define	CURRINST(p,pc)	((p)->p_mem[pc])$/
CURRSTAB	run.c	/^#define	CURRSTAB(m)	((m)->m_fram[(m)->m_fp].syms)$/
CURRSTAK	run.c	/^#define	CURRSTAK(m)	((m)->m_mem[(m)->m_pc])$/
Mmain	main.c	/^main(ac,av)$/
assemble	parse.y	/^assemble(p,op)$/
blt_atoi	bltin.c	/^blt_atoi(m,argc,firstarg,result,uid,euid)$/
blt_atoobj	bltin.c	/^blt_atoobj(m,argc,firstarg,result,uid,euid)$/
blt_catfile	bltin.c	/^blt_catfile(m,argc,firstarg,result,uid,euid)$/
blt_chmod	store.c	/^blt_chmod(m,argc,firstarg,result,uid,euid)$/
blt_chown	store.c	/^blt_chown(m,argc,firstarg,result,uid,euid)$/
blt_closefile	bltin.c	/^blt_closefile(Machine *m, int argc, int firstarg, /
blt_disconnect	bltin.c	/^blt_disconnect(m,argc,firstarg,result,uid,euid)$/
blt_echo	bltin.c	/^blt_echo(m,argc,firstarg,result,uid,euid)$/
blt_echoto	bltin.c	/^blt_echoto(m,argc,firstarg,result,uid,euid)$/
blt_errno	bltin.c	/^blt_errno(m,argc,firstarg,result,uid,euid)$/
blt_error	bltin.c	/^blt_error(m,argc,firstarg,result,uid,euid)$/
blt_geteuid	bltin.c	/^blt_geteuid(m,argc,firstarg,result,uid,euid)$/
blt_getuid	bltin.c	/^blt_getuid(m,argc,firstarg,result,uid,euid)$/
blt_islist	bltin.c	/^blt_islist(m,argc,firstarg,result,uid,euid)$/
blt_isnum	bltin.c	/^blt_isnum(m,argc,firstarg,result,uid,euid)$/
blt_isobj	bltin.c	/^blt_isobj(m,argc,firstarg,result,uid,euid)$/
blt_isstr	bltin.c	/^blt_isstr(m,argc,firstarg,result,uid,euid)$/
blt_listappend	list.c	/^blt_listappend(m,argc,firstarg,result,uid,euid)$/
blt_listcount	list.c	/^blt_listcount(m,argc,firstarg,result,uid,euid)$/
blt_listdrop	list.c	/^blt_listdrop(m,argc,firstarg,result,uid,euid)$/
blt_listelem	list.c	/^blt_listelem(m,argc,firstarg,result,uid,euid)$/
blt_listmerge	list.c	/^blt_listmerge(m,argc,firstarg,result,uid,euid)$/
blt_listnew	list.c	/^blt_listnew(m,argc,firstarg,result,uid,euid)$/
blt_listprepend	list.c	/^blt_listprepend(m,argc,firstarg,result,uid,euid)$/
blt_listsearch	list.c	/^blt_listsearch(m,argc,firstarg,result,uid,euid)$/
blt_listsetelem	list.c	/^blt_listsetelem(m,argc,firstarg,result,uid,euid)$/
blt_log	bltin.c	/^blt_log(m,argc,firstarg,result,uid,euid)$/
blt_match	match.c	/^blt_match(m,argc,firstarg,result,uid,euid)$/
blt_objectdestroy	store.c	/^blt_objectdestroy(m,argc,firstarg,result,uid,euid)/
blt_objectelements	store.c	/^blt_objectelements(m,argc,firstarg,result,uid,euid/
blt_objectnew	store.c	/^blt_objectnew(m,argc,firstarg,result,uid,euid)$/
blt_objectowner	store.c	/^blt_objectowner(m,argc,firstarg,result,uid,euid)$/
blt_openfile	bltin.c	/^blt_openfile(Machine *m, int argc, int firstarg, i/
blt_rand	bltin.c	/^blt_rand(m,argc,firstarg,result,uid,euid)$/
blt_regcmp	bltin.c	/^blt_regcmp(m,argc,firstarg,result,uid,euid)$/
blt_regexp	bltin.c	/^blt_regexp(m,argc,firstarg,result,uid,euid)$/
blt_setruid	bltin.c	/^blt_setruid(m,argc,firstarg,result,uid,euid)$/
blt_setuid	bltin.c	/^blt_setuid(m,argc,firstarg,result,uid,euid)$/
blt_shutdown	main.c	/^blt_shutdown(m,argc,firstarg,result,uid,euid)$/
blt_str	bltin.c	/^blt_str(m,argc,firstarg,result,uid,euid)$/
blt_strlen	bltin.c	/^blt_strlen(m,argc,firstarg,result,uid,euid)$/
blt_strtime	bltin.c	/^blt_strtime(m,argc,firstarg,result,uid,euid)$/
blt_time	bltin.c	/^blt_time(m,argc,firstarg,result,uid,euid)$/
cache_dropold	store.c	/^cache_dropold(cp,ep)$/
cache_get	store.c	/^cache_get(num)$/
cache_getholder	store.c	/^cache_getholder(num)$/
cache_insactiv	store.c	/^cache_insactiv(num,ep)$/
cache_put	store.c	/^cache_put(num,ino,changed,typ,op)$/
cache_reset	store.c	/^cache_reset()$/
cache_search	store.c	/^cache_search(num,aflg)$/
call_sysfunc	monitor.c	/^call_sysfunc(fname,uid,euid)$/
call_with_argv	monitor.c	/^call_with_argv(iob,objno,ac,av,uid,euid)$/
check_login	disp.c	/^check_login(s,iob)$/
chunkallocate	store.c	/^chunkallocate(cof,byts,realsiz)$/
chunkclose	store.c	/^chunkclose(cf)$/
chunkfree	store.c	/^chunkfree(cof,off,byts)$/
chunknew	store.c	/^chunknew(cof,byts,realsiz)$/
chunkopen	store.c	/^chunkopen(file)$/
compile_FILE	monitor.c	/^compile_FILE(fdes,iob,uid,euid)$/
compile_file	monitor.c	/^compile_file(name)$/
copystr	alloc.c	/^copystr(s)$/
cornedbeefhash	sym.c	/^cornedbeefhash(s,siz)$/
createpidfile	main.c	/^createpidfile()$/
db_close	store.c	/^db_close()$/
db_open	store.c	/^db_open()$/
disk_freeze	store.c	/^disk_freeze(ele,typ,data,op,uid,euid)$/
disk_thaw	store.c	/^disk_thaw(ele,typ,data,uid,euid)$/
dispatch	disp.c	/^dispatch(b,iob)$/
eleaddref	store.c	/^eleaddref(bob,ele)$/
elecompare	store.c	/^elecompare(e1,l1,e2,l2)$/
eledropref	store.c	/^eledropref(bob,ele)$/
elegetbase	store.c	/^elegetbase(ele)$/
elelen	store.c	/^elelen(elem)$/
elenewbase	store.c	/^elenewbase(ele)$/
eleroot	store.c	/^eleroot(enm)$/
enargv	misc.c	/^enargv(buf,av,avsiz,tobuf,bsiz)$/
errmsg	bltin.c	/^char	*errmsg(x)$/
fatal	misc.c	/^fatal(va_alist)$/
frame_pop	run.c	/^frame_pop(m)$/
frame_push	run.c	/^frame_push(m,ret_sp,ret_ac,onum)$/
freecompare	store.c	/^freecompare(f1,l1,f2,l2)$/
freezelist	store.c	/^freezelist(cof,off,l)$/
freezeprog	store.c	/^freezeprog(cof,off,p)$/
funcname	parse.y	/^funcname()$/
funcnum	parse.y	/^funcnum()$/
funcop	parse.y	/^funcop()$/
greet	disp.c	/^greet(iob)$/
initiateshutdown	main.c	/^initiateshutdown()$/
inoclose	store.c	/^inoclose(ino)$/
inofree	store.c	/^inofree(nof,i)$/
inonew	store.c	/^inonew(nof)$/
inoopen	store.c	/^inoopen(file)$/
inoread	store.c	/^inoread(inof,num,buf)$/
inowrite	store.c	/^inowrite(inof,num,buf)$/
iobconnected	tcpio.c	/^iobconnected(uid)$/
iobdisconnect	tcpio.c	/^iobdisconnect(uid)$/
iobdrop	tcpio.c	/^iobdrop(iob)$/
iobflush	tcpio.c	/^iobflush(iob)$/
iobput	tcpio.c	/^iobput(iob,va_alist)$/
iobtell	tcpio.c	/^iobtell(uid,va_alist)$/
iobwall	tcpio.c	/^iobwall(va_alist)$/
ioinit	tcpio.c	/^ioinit(defaultPort)$/
ioloop	tcpio.c	/^ioloop()$/
iosync	tcpio.c	/^iosync()$/
iowrap	tcpio.c	/^iowrap()$/
itoa	misc.c	/^itoa(num)$/
listcopy	alloc.c	/^listcopy(l)$/
listcopyinto	alloc.c	/^listcopyinto(l,p)$/
listnew	list.c	/^listnew(nmem)$/
listtmpcopy	alloc.c	/^listtmpcopy(l)$/
logf	misc.c	/^logf(va_alist)$/
logf_close	misc.c	/^logf_close()$/
logf_open	misc.c	/^logf_open(f)$/
lookup	parse.y	/^lookup(s,bval)$/
ltoa	misc.c	/^ltoa(num)$/
match	match.c	/^match(nam,uid,euid)$/
matchcompare	match.c	/^matchcompare(thing,nam,uid,euid,eflg)$/
matchreset	match.c	/^matchreset()$/
matchset	match.c	/^matchset(op,typ,fld)$/
matchvector	match.c	/^matchvector(s1,s2,eflg)$/
numeric_op	run.c	/^numeric_op(op,d1,d2)$/
opercopy	alloc.c	/^opercopy(old,otyp,new,ntyp,nsiz)$/
operdatasize	alloc.c	/^operdatasize(typ,op)$/
permitted	store.c	/^permitted(op,owner,mode,uid,euid)$/
player_in	monitor.c	/^player_in(b,iob)$/
prefixlen	match.c	/^prefixlen(s1,s2,flg)$/
preprocess_file	monitor.c	/^preprocess_file(f)$/
progcopy	alloc.c	/^progcopy(p)$/
progcopyinto	alloc.c	/^progcopyinto(p,r)$/
program_compile	monitor.c	/^program_compile(iob)$/
program_flush	monitor.c	/^program_flush(iob)$/
program_in	monitor.c	/^program_in(b,iob)$/
program_siz	monitor.c	/^program_siz(iob)$/
program_stop	monitor.c	/^program_stop(iob)$/
putinstringbuf	parse.y	/^putinstringbuf(b)$/
resetmachine	run.c	/^resetmachine(m)$/
resetparser	parse.y	/^resetparser()$/
run	run.c	/^run(mach,prog,pc,uid,euid)$/
searchbuf	parse.y	/^searchbuf(s)$/
serverisalive	main.c	/^serverisalive()$/
setinterrupts	main.c	/^setinterrupts()$/
setyyinput	parse.y	/^setyyinput(f)$/
stack_dump	run.c	/^stack_dump(m)$/
stack_pop	run.c	/^stack_pop(m,op)$/
stack_push	run.c	/^stack_push(m,typ,val)$/
stack_setowner	run.c	/^stack_setowner(m,own)$/
symadd	sym.c	/^symadd(sym,table)$/
symfreelist	sym.c	/^symfreelist(l)$/
symlook	sym.c	/^symlook(str,table)$/
symnew	sym.c	/^symnew(name,typ,op)$/
sys_freeze	sym.c	/^sys_freeze(ele,typ,data,uid,euid)$/
sys_getsym	sym.c	/^sys_getsym(ele)$/
sys_thaw	sym.c	/^sys_thaw(ele,typ,data,uid,euid)$/
syssyminit	sym.c	/^syssyminit()$/
test_bool	run.c	/^test_bool(dt,d)$/
test_equal	run.c	/^test_equal(d1t,d1,d2t,d2,op)$/
tmpalloc	alloc.c	/^tmpalloc(siz)$/
tmpfree	alloc.c	/^tmpfree()$/
tmpputonfree	alloc.c	/^tmpputonfree(p)$/
usage	main.c	/^usage()$/
yyerror	monitor.c	/^yyerror(s)$/
yylex	parse.y	/^yylex()$/
